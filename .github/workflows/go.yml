# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ~1.18

    - name: Prepare environment
      run: |
        go env -w GO111MODULE=on && go env
        go mod download        

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3.3.0
      with:
        # version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: latest
        # golangci-lint command line arguments
        args: --sort-results
        # golangci-lint working directory, default is project root
        #working-directory: # optional
        # the token is used for fetching patch of a pull request to show only new issues
        # github-token: # optional, default is ${{ github.token }}
        # if set to true and the action runs on a pull request - the action outputs only newly found issues
        only-new-issues: false
        # if set to true then the all caching functionality will be complete disabled, takes precedence over all other caching options.
        skip-cache: true
        # if set to true then the action doesn't cache or restore ~/go/pkg.
        skip-pkg-cache: false
        # if set to true then the action doesn't cache or restore ~/.cache/go-build.
        skip-build-cache: true
    
    - name: Run tests
      run: go test -v -failfast ./...
